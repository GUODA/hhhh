<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd"
       default-lazy-init="false">
    <!-- default-lazy-init="true" 延迟初始化bean -->
    <description>applicationContext-shiro.xml文件中，
        定义web支持的SecurityManager和名为"shiroSecurityFilter"的bean将会被web.xml引用
    </description>
    <!-- Shiro GridFilter -->
    <bean id="permsFilter" class="org.apache.shiro.web.filter.authz.PermissionsAuthorizationFilter"/>
    <bean id="logoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">
        <property name="redirectUrl" value="/cms/user/login"/>
    </bean>
    <bean id="shiroSecurityFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- shiro的核心安全接口 -->
        <property name="securityManager" ref="securityManager"/>
        <!-- 如果没有登录，用户请求要求登录的页面时要跳转的链接 -->
        <property name="loginUrl" value="/admin/login"/>
        <!-- 登陆成功后要跳转的连接 -->
        <property name="successUrl" value="/admin/index"/>
        <property name="filters">
            <map>
                <entry key="logout" value-ref="logoutFilter"/>
                <entry key="perms" value-ref="permsFilter"/>
            </map>
        </property>

        <!--The default GridFilter instances available automatically are defined by the DefaultFilter enum and the enum's name field is the name available for configuration. They are:-->

        <!--GridFilter Name	Class-->
        <!--anon	org.apache.shiro.web.filter.authc.AnonymousFilter-->
        <!--authc	org.apache.shiro.web.filter.authc.FormAuthenticationFilter-->
        <!--authcBasic	org.apache.shiro.web.filter.authc.BasicHttpAuthenticationFilter-->
        <!--logout	org.apache.shiro.web.filter.authc.LogoutFilter-->
        <!--noSessionCreation	org.apache.shiro.web.filter.session.NoSessionCreationFilter-->
        <!--perms	org.apache.shiro.web.filter.authz.PermissionsAuthorizationFilter-->
        <!--port	org.apache.shiro.web.filter.authz.PortFilter-->
        <!--rest	org.apache.shiro.web.filter.authz.HttpMethodPermissionFilter-->
        <!--roles	org.apache.shiro.web.filter.authz.RolesAuthorizationFilter-->
        <!--ssl	org.apache.shiro.web.filter.authz.SslFilter-->
        <!--user	org.apache.shiro.web.filter.authc.UserFilter-->

        <!-- shiro连接约束配置 -->
        <property name="filterChainDefinitions">
            <value>
                <!--Shiro主要是通过URL过滤来进行安全管理-->
                <!--/cms/login = authc     认证过滤器
                /cms/index = authc
                /cms/logout = logout
                /cms/** = user,perms
                /static/** = anon
                -->

                /admin/index = authc
            </value>
        </property>
    </bean>
    <bean id="myRealm" class="com.demo.auth.ShiroDbRealm"></bean>
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!--可以配置多个realm-->
        <!--配置多个realm的执行顺序-->
        <!--<property name="realms">
            <list>
                <bean id="shiroDbRealm" class="cn.simple.service.ShiroDbRealm"/>
                <bean id="shiroDbRealm1" class="cn.simple.service.ShiroDbRealm1"/>
            </list>
        </property>-->
        <property name="realm" ref="myRealm"/>
        <property name="cacheManager" ref="shiroEhcacheManager"/>
    </bean>
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <!-- 用户授权信息Cache, 采用EhCache -->
    <bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:conf/ehcache.xml"/>
    </bean>
</beans>