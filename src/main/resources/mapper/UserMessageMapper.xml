<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.demo.dao.UserMessageMapper" >
  <resultMap id="BaseResultMap" type="com.demo.model.UserMessage" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="TIMESTAMP" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="number" property="number" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="loginIp" property="loginip" jdbcType="VARCHAR" />
    <result column="loginTime" property="logintime" jdbcType="TIMESTAMP" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, phone, birthday, email, number, description, loginIp, loginTime, user_id, sex
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_message
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_message
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.demo.model.UserMessage" >
    insert into user_message (id, phone, birthday, 
      email, number, description, 
      loginIp, loginTime, user_id, 
      sex)
    values (#{id,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{birthday,jdbcType=TIMESTAMP}, 
      #{email,jdbcType=VARCHAR}, #{number,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{loginip,jdbcType=VARCHAR}, #{logintime,jdbcType=TIMESTAMP}, #{userId,jdbcType=INTEGER}, 
      #{sex,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.demo.model.UserMessage" >
    insert into user_message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="loginip != null" >
        loginIp,
      </if>
      <if test="logintime != null" >
        loginTime,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="sex != null" >
        sex,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="loginip != null" >
        #{loginip,jdbcType=VARCHAR},
      </if>
      <if test="logintime != null" >
        #{logintime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.demo.model.UserMessage" >
    update user_message
    <set >
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="loginip != null" >
        loginIp = #{loginip,jdbcType=VARCHAR},
      </if>
      <if test="logintime != null" >
        loginTime = #{logintime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.demo.model.UserMessage" >
    update user_message
    set phone = #{phone,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      email = #{email,jdbcType=VARCHAR},
      number = #{number,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      loginIp = #{loginip,jdbcType=VARCHAR},
      loginTime = #{logintime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER},
      sex = #{sex,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>